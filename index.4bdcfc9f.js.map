{"mappings":"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","sources":["node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/js/refs.js","src/js/storage.js","src/js/todo.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export const refs = {\n    form: document.querySelector('.todo'),\n    list: document.querySelector('.todo__items')\n}","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { refs } from './refs';\nimport storage from './storage';\n\nlet todo = {};\nconst LOCAL_STORAGE_KEY = 'form-data';\n\ninitTodo();\n\nrefs.form.addEventListener('input', onInputValue);\n\nfunction onInputValue(e) {\n  const { name, value } = e.target;\n\n  todo[name] = value;\n  todo.id = uuidv4();\n  storage.save(LOCAL_STORAGE_KEY, todo);\n}\n\nfunction initTodo() {\n  const savedTodo = storage.load(LOCAL_STORAGE_KEY);\n\n  if (savedTodo) {\n    todo = savedTodo;\n\n    for (const key in todo) {\n      refs.form.elements[key].value = todo[key];\n    }\n  }\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  if (todo.text === '' || !todo.priority) {\n    Notify.failure('Усі поля повинні бути заповнені');\n    return;\n  }\n\n  console.log(todo);\n  Notify.success('Виконано успішно');\n  const markup = `<li>todo:${todo.text}, priority ${todo.priority}</li>`;\n  refs.list.insertAdjacentHTML('afterbegin', markup);\n  refs.form.reset();\n  storage.remove(LOCAL_STORAGE_KEY);\n  Object.keys(todo).forEach(key => (todo[key] = ''));\n}\n"],"names":["$a4faffbfed8ce8b6$var$getRandomValues","$cb482a25fa64fd81$export$2e2bcd8739ae039","randomUUID","crypto","bind","$a4faffbfed8ce8b6$var$rnds8","Uint8Array","$a4faffbfed8ce8b6$export$2e2bcd8739ae039","getRandomValues","Error","$489cbfc69d38cb8e$var$byteToHex","$489cbfc69d38cb8e$var$i","push","toString","slice","$489cbfc69d38cb8e$export$8fb373d660548968","arr","offset","arguments","length","toLowerCase","$d0666643e2ee88b4$export$2e2bcd8739ae039","options","buf","rnds","random","rng","i","$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","list","$e40a24b7fc93604f$export$2e2bcd8739ae039","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","remove","removeItem","$34b9064c7d3a6751$var$todo","$34b9064c7d3a6751$var$LOCAL_STORAGE_KEY","savedTodo","elements","$34b9064c7d3a6751$var$initTodo","addEventListener","e","_target","target","name","id","preventDefault","text","priority","$h6c0i","Notify","failure","log","success","markup","concat","insertAdjacentHTML","reset","Object","keys","forEach"],"version":3,"file":"index.4bdcfc9f.js.map"}